openapi: 3.0.0
info:
  title: Kyzmet API
  version: 1.0.0
  description: Полная документация, собранная из модулей
servers:
  - url: http://localhost:6969/api
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Регистрация нового пользователя
      description: Регистрирует нового пользователя по номеру телефона и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                password:
                  type: string
              required:
                - phone
                - password
      responses:
        "200":
          description: Успешная регистрация
        "400":
          description: Ошибка данных
        "500":
          description: Ошибка сервера
  /auth/verify-otp:
    post:
      tags:
        - auth
      summary: Подтверждение регистрации через OTP
      description: Подтверждает номер телефона через код OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                otp:
                  type: string
              required:
                - phone
                - otp
      responses:
        "200":
          description: Телефон подтвержден
        "400":
          description: Неверный код
        "500":
          description: Ошибка сервера
  /auth/login:
    post:
      tags:
        - auth
      summary: Логин пользователя
      description: Вход по номеру телефона и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                password:
                  type: string
              required:
                - phone
                - password
      responses:
        "200":
          description: Успешный вход
        "400":
          description: Неверные данные
        "500":
          description: Ошибка сервера
  /auth/request-reset-password:
    post:
      tags:
        - auth
      summary: Запрос сброса пароля
      description: Отправляет OTP код на телефон для сброса пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
              required:
                - phone
      responses:
        "200":
          description: Код отправлен
        "400":
          description: Ошибка запроса
        "500":
          description: Ошибка сервера
  /auth/reset-password:
    post:
      tags:
        - auth
      summary: Сброс пароля
      description: Сброс пароля по номеру телефона и OTP коду
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                otp:
                  type: string
                newPassword:
                  type: string
              required:
                - phone
                - otp
                - newPassword
      responses:
        "200":
          description: Пароль успешно изменен
        "400":
          description: Неверный код
        "500":
          description: Ошибка сервера
  /chats/start:
    post:
      tags:
        - chats
      summary: Начать чат
      description: Начинает новый чат с другим пользователем
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetUserId:
                  type: string
              required:
                - targetUserId
      responses:
        "200":
          description: Чат создан или найден
        "400":
          description: Ошибка запроса
        "500":
          description: Ошибка сервера
  /chats:
    get:
      tags:
        - chats
      summary: Получить список чатов
      description: Возвращает список всех чатов пользователя
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Список чатов
        "401":
          description: Не авторизован
        "500":
          description: Ошибка сервера
  "/chats/{chatId}/messages":
    get:
      tags:
        - chats
      summary: Получить сообщения чата
      description: Возвращает все сообщения внутри выбранного чата
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Сообщения чата
        "400":
          description: Ошибка запроса
        "500":
          description: Ошибка сервера
    post:
      tags:
        - chats
      summary: Отправить сообщение в чат
      description: Отправляет новое сообщение в чат
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        "200":
          description: Сообщение отправлено
        "400":
          description: Ошибка отправки
        "500":
          description: Ошибка сервера
  /jobs:
    get:
      tags:
        - jobs
      summary: Получить список заданий
      description: Возвращает все активные задания (JobPost)
      responses:
        "200":
          description: Список заданий
        "500":
          description: Ошибка сервера
    post:
      tags:
        - jobs
      summary: Создать задание
      description: Создает новое задание
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                location:
                  type: string
              required:
                - title
                - description
                - category
      responses:
        "201":
          description: Задание создано
        "400":
          description: Ошибка данных
        "500":
          description: Ошибка сервера
  "/jobs/{id}/apply":
    post:
      tags:
        - jobs
      summary: Отклик на задание
      description: Авторизованный пользователь откликается на задание
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
              required:
                - message
      responses:
        "200":
          description: Отклик отправлен
        "400":
          description: Ошибка запроса
        "500":
          description: Ошибка сервера
  "/jobs/{id}/promote":
    post:
      tags:
        - jobs
      summary: Поднять задание в топ
      description: Платное продвижение задания на 3 или 7 дней
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                days:
                  type: integer
              required:
                - days
      responses:
        "200":
          description: Задание продвинуто
        "400":
          description: Ошибка данных
        "500":
          description: Ошибка сервера
  "/jobs/{id}/contact":
    post:
      tags:
        - jobs
      summary: Купить контакт нанимателя
      description: Открывает контактную информацию нанимателя за монеты
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Контакт получен
        "400":
          description: Ошибка
        "500":
          description: Ошибка сервера
  /notifications:
    get:
      tags:
        - notifications
      summary: Получить список уведомлений
      description: Возвращает список всех уведомлений текущего пользователя
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Список уведомлений
        "500":
          description: Ошибка при получении уведомлений
  "/notifications/{id}/read":
    patch:
      tags:
        - notifications
      summary: Пометить уведомление как прочитанное
      description: Отмечает конкретное уведомление как прочитанное по ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID уведомления
      responses:
        "200":
          description: Уведомление помечено как прочитанное
        "500":
          description: Ошибка при обновлении уведомления
  /reviews:
    get:
      tags:
        - reviews
      summary: Получить отзывы по провайдеру
      description: Публичный список отзывов по providerId (в query-параметрах)
      parameters:
        - name: providerId
          in: query
          required: true
          schema:
            type: string
          description: ID провайдера
      responses:
        "200":
          description: Список отзывов
        "400":
          description: Отсутствует providerId
        "500":
          description: Ошибка сервера
    post:
      tags:
        - reviews
      summary: Оставить отзыв провайдеру
      description: Клиент оставляет отзыв (оценка и комментарий) провайдеру
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                providerId:
                  type: string
                rating:
                  type: number
                comment:
                  type: string
              required:
                - providerId
                - rating
      responses:
        "200":
          description: Отзыв добавлен
        "400":
          description: Ошибка данных
        "500":
          description: Ошибка сервера
  /services:
    post:
      tags:
        - services
      summary: Создать услугу
      description: Создает новую услугу
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                images:
                  type: array
                  items:
                    type: string
                videos:
                  type: array
                  items:
                    type: string
                locationId:
                  type: string
                categoryId:
                  type: string
              required:
                - title
                - description
                - price
                - locationId
                - categoryId
      responses:
        "201":
          description: Услуга создана
        "400":
          description: Ошибка данных
        "500":
          description: Ошибка сервера
  "/services/{id}/promote":
    post:
      tags:
        - services
      summary: Поднять услугу в топ
      description: Платное продвижение услуги на 3 или 7 дней
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                days:
                  type: integer
              required:
                - days
      responses:
        "200":
          description: Услуга продвинута
        "400":
          description: Ошибка данных
        "500":
          description: Ошибка сервера
  "/services/{id}/contact":
    post:
      tags:
        - services
      summary: Купить контакт провайдера
      description: Открывает контактную информацию провайдера за монеты
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Контакт получен
        "400":
          description: Ошибка
        "500":
          description: Ошибка сервера
  /users/me:
    get:
      tags:
        - users
      summary: Получить свой профиль
      description: Возвращает информацию о текущем пользователе
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Данные профиля
        "401":
          description: Не авторизован
        "500":
          description: Ошибка сервера
    patch:
      tags:
        - users
      summary: Обновить свой профиль
      description: Обновляет email или телефон пользователя
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
      responses:
        "200":
          description: Профиль обновлен
        "400":
          description: Ошибка данных
        "500":
          description: Ошибка сервера
  /wallet:
    get:
      tags:
        - wallet
      summary: Получить свой кошелек
      description: Возвращает текущий баланс пользователя и историю транзакций
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Баланс и транзакции
        "401":
          description: Не авторизован
        "500":
          description: Ошибка сервера
  /wallet/top-up:
    post:
      tags:
        - wallet
      summary: Пополнить кошелек (заглушка)
      description: Пополняет баланс монет через тестовый метод
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
              required:
                - amount
      responses:
        "200":
          description: Баланс пополнен
        "400":
          description: Ошибка данных
        "500":
          description: Ошибка сервера
